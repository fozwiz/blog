I have no talent. What I do have is a lot of practice. --<a href=http://johnnunemaker.com/>John Nunemaker</a>: <a href=http://railstips.org/blog/archives/2010/01/12/i-have-no-talent/>I Have No Talent</a>
Learning new techniques is good, but using the techniques you already know appropriately is better. --<a href=http://www.perlmonks.org/?node_id=208803>chromatic</a>
Nothing has increased my programming productivity more than being able to restate hard problems as simple ones. --David Heinemeier Hansson (Ruby on Rails, 37signals)
Eventually I want to live near a beach and work from a laptop with a good wireless connection and a view of the sea :). --<a href=http://uk.linkedin.com/in/markkeating>mdk</a>
What do you care what other people think? --Richard Feynman
Good service is rare, so when you find it, treasure it. --Matt Simmons: <a href=http://sysadvent.blogspot.sk/2012/12/day-6-watching-out-for-vendor-lock-in.html>Day 6 - Watching out for vendor lock-in</a>
When debugging a problem, most of us sysadmins dive in, execute a task, analyze the result, and repeat until the problem is solved. --Kent C. Brodie: <a href=http://sysadvent.blogspot.sk/2012/12/day-5-following-white-rabbit.html>Day 5: Following the white rabbit</a>
If you tell me, I'll forget. If you show me, I'll remember. If you involve me, I'll understand. <a href=http://www.perlmonks.org/?node_id=918402>2teez</a>
What can be asserted  without proof can be dismissed  without proof. --Christopher Hitchins
The essential thing "in heaven and earth" is . . . that there should be '''long obedience in the same direction'''; there thereby  results, and has always resulted in the long run, something which has made life worth living. --Friedrich Nietzsche, <a href=http://oreilly.com/catalog/opensources/book/larry.html>Open Sources: Voices from the Open Source Revolution</a>
Three great virtues of programming are '''laziness''', '''impatience''', and '''hubris''' . ... But here I'm going to talk about some other virtues: '''diligence''' , '''patience''', and '''humility'''. If you think these sound like the opposite, you're right. --<a href=http://oreilly.com/catalog/opensources/book/larry.html>Open Sources: Voices from the Open Source Revolution</a>: Larry Wall (1999)
Then again, I did learn to program by the osmosis  of typing a lot of code, changing it, and eventually learning what worked and didn't. --chromatic: <a href=http://www.modernperlbooks.com/mt/2012/06/from-alchemy-to-science-in-programming.html>From Alchemy to Science in Programming</a>
Well done is better than well said. --Benjamin Franklin
At its heart, science is a way of discovering the world by making small, controlled, testable hypotheses, testing them, and seeing what happens. At its heart, a lot of programming is the same way. (So is running a small business selling a new product or service.) --chromatic: <a href=http://www.modernperlbooks.com/mt/2012/06/updating-tests-and-code-in-small-steps.html>Updating Tests and Code in Small Steps</a>
The Internet is a weird and terrible thing. Larry wrote, "The social dynamics of the net are a direct consequence of the fact that nobody has yet developed a Remote Strangulation Protocol." --rjbs: <a href=http://rjbs.manxome.org/rubric/entry/1959>the perl 5.16.0 epigraph</a>
We are what we repeatedly do. Excellence, then, is not an act but a habit. --Will Durant (Aristotle)
... writing code before you have an expert-level understanding is okay. --Tom Dale: <a href=http://tomdale.net/2012/04/best-practices-exist-for-a-reason/>Best Practices Exist for a Reason</a>
Humans need aerobic exercise in order to stay healthy. If there's any magic bullet to make human beings healthy, it's to run. --Lieberman (<a href=http://www.dailymail.co.uk/home/moslive/article-1170253/The-painful-truth-trainers-Are-expensive-running-shoes-waste-money.html>The painful truth about trainers: Are running shoes a waste of money?</a>)
"So you decided that failure was OK." Yes. I stopped worrying about perfection where it didn't matter. Perfectionism is often overkill and a real time waster. --<a href=http://everythingsysadmin.com/>Thomas A. Limoncelli</a>: Time Management for System Administrators
You can code. They cannot. That is pretty damn cool. --<a href=http://learnpythonthehardway.org/book/advice.html?utm_source=hackernewsletter&utm_medium=email>Advice From An Old Programmer</a>
I know that to get good at anything you have to practice every day, even if I suck that day (which is often) or it's difficult. Keep trying and eventually it'll be easier and fun. --<a href=http://learnpythonthehardway.org/book/intro.html>The Hard Way Is Easier</a>
In the third phase, you realize that Python is actually a great help to you and that Python represents the ''collective intelligence'' of hundreds of programmers who have given you some powerful and brilliant tools and capabilities. --<a href=http://doc.pyschools.com/html/tao.html>Tao of Programming</a>
Because humans have unlimited storage capacity, having total recall would be a mess. --<a href=http://www.psych.ucla.edu/faculty/faculty_page?id=41&area=3>Rober Bjork</a> (UCLA): <a href=http://www.wired.com/geekdad/2012/01/everything-about-learning/>Everything You Thought You Knew About Learning Is Wrong</a>
You're never too old to learn. One of the best programmers I ever interviewed for a job was 60! --<a href=http://cplus.about.com/bio/David-Bolton-20620.htm>David Bolton</a>: <a href=http://cplus.about.com/od/introductiontoprogramming/a/career.htm>How Do I Get into Programming as a Career?</a>
You only get old if you let yourself be old; then it's too late. --Andrew Wulf: <a href=http://thecodist.com/article/am-i-too-old-to-be-a-programmer>Am I Too Old To Be A Programmer?</a>
Learning to program is like learning to write good natural language. The best way to do it is to read some stuff written by masters of the form, write some things yourself, read a lot more, write a little more, read a lot more, write some more ... and repeat until your writing begins to develop the kind of strength and economy you see in your models. --Eric Steven Raymond: <a href=http://www.catb.org/~esr/faqs/hacker-howto.html>How To Become A Hacker</a>
Based upon the highly-problematic code you have posted here and other nodes you have written to date, '''I think you are trying run before you can walk'''. --<a href=http://www.perlmonks.org/?node_id=940093>Re: averages from multiple files</a>
Genius is 1 percent inspiration and 99 percent perspiration. --Thomas Edison
If I were looking to improve my Perl marketability for the future, www.perlmonks.org is the place I'd be hanging out. --<a href=http://www.perlmonks.org/?node_id=131253>Damian praises Perl Monks</a>
The idea, is to make a compromise, somewhere between your ambitions, and your limitations. -- The Teahouse of the August Moon
Similarly, Perl was designed to be a mess (though in the nicest of possible ways). --<a href=http://oreilly.com/catalog/opensources/book/larry.html>Open Sources: Voices from the Open Source Revolution</a>: Larry Wall (1999)
The race is on to own certain classes of core data: location, identity, calendaring of public events, product identifiers and namespaces. --<a href=http://oreilly.com/pub/a/web2/archive/what-is-web-20.html?page=1>Tim O'Reilly: What Is Web 2.0 (2005)</a>
To a large degree, you need to find the '''tool that fits your brain best'''. Perl and Python can do basically the same things, but they do them differently. Try both out (and try Ruby) and see which one works for you. --Dave Rolsky (<a href=http://search.cpan.org/dist/Moose/>Moose</a> core developer): <a href=http://stackoverflow.com/questions/150043/python-v-perl>Python v. Perl</a>
Laziness = a tendency to judiciously exploit available resources to accomplish your programming goals with minimal effort. --<a href=https://git.openhouse.sk/files/books/prog/perl>Minimal_Perl_for_UNIX_and_Linux_People.pdf|Minimal Perl for UNIX and Linux People</a> (in the Perl community - Laziness = using your energy efficiently)
Always trust your users. Never trust their input. --<a href=http://perltraining.com.au/notes/webdev.pdf>Fenwick, Richardson, Robert: Web Development with Perl</a>
The real job of a university is to teach a student how to self-educate, and (of course) to demonstrate that the student is capable of that through testing. --Jon "Maddog" Hall: <a href=http://blog.lpi.org/index.php/2011/04/is-a-university-degree-necessary/>Is a University Degree Necessary?</a>
Is what I'm about to say: '''T'''houghtful , '''H'''onest, '''I'''ntelligent, '''N'''ecessary, '''K'''ind? --Andy Lester: <a href=http://perlbuzz.com/2010/11/think-for-perls-sake.html>Think, fo Perl's sake</a>
DRY = Don't repeat yourself -> make functions, subroutines, procedures --The Pragmatic Programmer, by Andy Hunt and Dave Thomas, Addison-Wesley, 1999
Understand what you want, find your talent, focus, and get to work. --Lenny Zeltser, <a href=http://www.techrepublic.com/blog/security/students-of-it-security-career-advice-from-the-masters/5101?tag=content;blog-list-river>Students of IT security: Career advice from the masters</a>
I can tell you I don't have money. But what I do have are a very particular set of skills; skills I have acquired over a very long career. --Bryan Mills
If an attacker has physical access to your system, they win, regardless of the OS on the computer. --http://www.openbsd.org/faq/faq8.html
There are no failures - just experiences and your reactions to them. -- Tom Krause
The greatest mistake so often made is to make a network configuration too complex. It pays to use the simplest solution that will meet the needs of the moment. --<a href=http://www.samba.org/samba/docs/man/Samba-HOWTO-Collection/StandAloneServer.html#id2575440>Samba documentation</a>
... hard disks always fail eventually ... --<a href=http://www.mikerubel.org/computers/rsync_snapshots/#Isolation>Mike Rubel's rsync snapshots backup</a>
And like that...he's gone. -- Keyser Soze, Bryan Singer: The Usual Suspects (1995)
If you have the right attitude, interesting problems will find you. <a href=http://catb.org/~esr/writings/cathedral-bazaar/cathedral-bazaar/ar01s02.html>ESR: The Cathedral and The Bazaar</a>
...you often don't really understand the problem until after the first time you implement a solution. The second time, maybe you know enough to do it right. So if you want to get it right, be ready to '''start over at least once'''. <a href=http://catb.org/~esr/writings/cathedral-bazaar/cathedral-bazaar/ar01s02.html>ESR: The Cathedral and The Bazaar</a>
...the value isn't in the software or the hardware, it's in the systems we build with both. --http://blogs.sun.com/jonathan/
I sense...space. A kinda latitude of what we happily call reality, in which as everybody keeps saying...anything's possible. --Dan
You've been smoking something really mind altering, and I think you should share it. -- Theo de Raadt, <a href=http://kerneltrap.org/OpenBSD/Virtualization_Security>KernelTrap</a>
There is a basic rule in taking advise: Never take it from someone who had never achieved the thing you want to achieve. -- Robert T. Kyiosaki
Skutocne stastie sa da dosiahnut nie uspokojovanim svojich potrieb, ale oddanostou bohumilej veci. -- Helen Keller - Deafblind American author, activist and lecturer
It's not the size of the dog that matters in a fight. It's the size of the fight in the dog!
Nie je dolezite, aby bol zazitok pozitivny. Hlavne aby bol silny. -- Barabas: Pururambo, 25/10/05
I don't care to belong to a club that accepts people like me as a member. -- Groucho Marx
There you go, mate. Keep as cool as you can. Face piles of trials  with smiles. It riles  them to believe that you perceive  the web they weave. And keep on thinking free. --The Moody Blues
The illiterate of the 21st century will not be those who cannot read and write, but those who cannot learn, unlearn, and relearn. -- Alvin Toffler
Reading furnishes the mind only with materials of knowledge; it is thinking that makes what we read ours. -- John Locke
Leave no stone unturned. -- Euripides
Accadono cose che sono come domande. Passa un minuto, oppure anni, e poi la vita ti risponde. -- Alessandro Baricco (1958)
From the viewpoint of positivist philosophy, however one cannot determine WHAT IS REAL. All one can do is find which mathematical models describe the universe we live in. We cannot  even suppose that the particle has a position and velocity that are known to God but are hidden from us.   -- S. Hawking: The Universe in a Nutshell (2001)
When neither their poverty nor their honor is touched, the majority of men live content. --Niccolo Machiavelli
"You shall know the truth, and the truth shall set you free." -- Yeshua (Jesus Christ) - Wikiquote
"Ma i nostri corpi a dormire su un materasso di foglie, a soffrire di geloni, si sono nutriti di cavolo e di lampredotto, come volete che ci faccia paura ritrovarci un po' diversi in viso? Credete che non ci riconosceremo?" -- Vasco Pratolini: Il quartiere (1945)
It is only with the heart one can see clearly; what is essential is invisible to the eye. -- The Fox, 'The Little Prince'
root@paradiso:~# tar vxzf universo.tar.gz --> Big Bang!
As the complexity of a system increases, so does the likelyhood of a failure.
It is more efficient to specialize in one field (to be the best for a given task) and combine with likewise designed tools instead of having one BIG CHUNK to do it all (eating up resources by unused functionality). -- <a href=http://wiki.mutt.org/index.cgi?MailConcept>MuttWiki</a>
"Se il pugno e' chiuso la mano e' vuota. Solo se la mano e' aperta puoi possedere tutto." -- Li Mu Bai
There is a difference between knowing the path and walking the path. -- Morpheus
